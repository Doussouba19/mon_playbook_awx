---
- name: "Initialiser les objets iTop à partir des faits système"
  hosts: all
  gather_facts: true
  tasks:

    - name: "Déduire les infos système"
      set_fact:
        brand_name: "{{ ansible_hostname | regex_replace('^(.*?)-.*$', '\\1') }}"
        server_name: "{{ ansible_hostname }}"
        model_name: "{{ ansible_product_name | default('unknown') }}"
        os_name: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
        org_name: "MyOrganization"

    - name: "Créer la marque (Brand)"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/create
          class: Brand
          comment: "Création de la marque si elle n'existe pas"
          fields:
            name: "{{ brand_name }}"
      register: brand_create
      failed_when: false

    - name: "Récupérer la marque (Brand) si création échouée"
      when: brand_create.json.objects is not defined
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/get
          class: Brand
          key: "SELECT Brand WHERE name='{{ brand_name }}'"
      register: brand_query

    - name: "Définir brand_id depuis récupération"
      when: brand_create.json.objects is not defined and (brand_query.json.objects | default([])) | length > 0
      set_fact:
        brand_id: "{{ brand_query.json.objects | dict2items | first.value.key }}"

    - name: "Définir brand_id depuis création"
      when: brand_create.json.objects is defined
      set_fact:
        brand_id: "{{ brand_create.json.objects | dict2items | first.value.key }}"

    - name: "Créer le modèle (Model)"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/create
          class: Model
          comment: "Création du modèle"
          fields:
            name: "{{ model_name }}"
            brand_id: "Brand::{{ brand_id }}"
      register: model_create
      failed_when: false

    - name: "Définir model_id"
      set_fact:
        model_id: "{{ model_create.json.objects | dict2items | first.value.key }}"

    - name: "Créer le serveur (VirtualMachine)"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/create
          class: VirtualMachine
          comment: "Création de la VM"
          fields:
            name: "{{ server_name }}"
            org_id: "SELECT Organization WHERE name='{{ org_name }}'"
            model_id: "Model::{{ model_id }}"
            osfamily_id: "Other"
            osversion_id: "Other"
            status: "production"
      register: server_create
