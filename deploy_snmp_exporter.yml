---
- name: Installer et configurer SNMP Exporter sur tous les serveurs
  hosts:
    - grafana
    - itop
    - semaphore
  become: yes
  vars:
    snmp_exporter_version: "0.21.0"
    snmp_exporter_url: "https://github.com/prometheus/snmp_exporter/releases/download/v{{ snmp_exporter_version }}/snmp_exporter-{{ snmp_exporter_version }}.linux-amd64.tar.gz"
    snmp_exporter_install_dir: "/usr/local/snmp_exporter"
    snmp_exporter_user: "snmp_exporter"

  tasks:
    - name: Créer l'utilisateur snmp_exporter
      ansible.builtin.user:
        name: "{{ snmp_exporter_user }}"
        shell: /usr/sbin/nologin
        system: yes
        create_home: no

    - name: Créer le dossier d'installation
      file:
        path: "{{ snmp_exporter_install_dir }}"
        state: directory
        owner: "{{ snmp_exporter_user }}"
        group: "{{ snmp_exporter_user }}"
        mode: "0755"

    - name: Télécharger SNMP Exporter archive
      get_url:
        url: "{{ snmp_exporter_url }}"
        dest: "/tmp/snmp_exporter.tar.gz"
        mode: '0644'
      register: download_snmp_exporter
      until: download_snmp_exporter is succeeded
      retries: 3
      delay: 10

    - name: Extraire SNMP Exporter archive
      unarchive:
        src: "/tmp/snmp_exporter.tar.gz"
        dest: "/tmp/"
        remote_src: yes
        creates: "/tmp/snmp_exporter-{{ snmp_exporter_version }}.linux-amd64/snmp_exporter"

    - name: Copier le binaire snmp_exporter
      copy:
        src: "/tmp/snmp_exporter-{{ snmp_exporter_version }}.linux-amd64/snmp_exporter"
        dest: "{{ snmp_exporter_install_dir }}/snmp_exporter"
        owner: "{{ snmp_exporter_user }}"
        group: "{{ snmp_exporter_user }}"
        mode: '0755'

    - name: Copier la configuration snmp.yml (exemple minimaliste)
      copy:
        content: |
          modules:
            if_mib:
              walk:
                - 1.3.6.1.2.1.2
                - 1.3.6.1.2.1.31
              metrics:
                - name: ifInOctets
                  oid: 1.3.6.1.2.1.2.2.1.10
                  type: counter
                - name: ifOutOctets
                  oid: 1.3.6.1.2.1.2.2.1.16
                  type: counter
        dest: "{{ snmp_exporter_install_dir }}/snmp.yml"
        owner: "{{ snmp_exporter_user }}"
        group: "{{ snmp_exporter_user }}"
        mode: '0644'

    - name: Créer un service systemd pour snmp_exporter
      copy:
        dest: /etc/systemd/system/snmp_exporter.service
        content: |
          [Unit]
          Description=Prometheus SNMP Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User={{ snmp_exporter_user }}
          Group={{ snmp_exporter_user }}
          ExecStart={{ snmp_exporter_install_dir }}/snmp_exporter --config.file={{ snmp_exporter_install_dir }}/snmp.yml
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start snmp_exporter service
      systemd:
        name: snmp_exporter
        state: started
        enabled: yes

- name: Déployer la configuration Prometheus sur le serveur Prometheus
  hosts: grafana
  become: yes
  vars:
    prometheus_config_path: "/etc/prometheus/prometheus.yml"

  tasks:
    - name: Sauvegarder l'ancien fichier prometheus.yml
      copy:
        dest: "{{ prometheus_config_path }}.bak"
        remote_src: yes
        backup: yes
      ignore_errors: yes

    - name: Copier la configuration prometheus.yml avec job snmp
      copy:
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          scrape_configs:
            - job_name: 'snmp'
              static_configs:
                - targets:
                    - 10.0.57.35:9116
                    - 10.0.57.36:9116
                    - 10.0.57.34:9116
              metrics_path: /snmp
              params:
                module: [if_mib]

          # Les autres configurations existantes peuvent être ajoutées ici
        dest: "{{ prometheus_config_path }}"
        mode: '0644'
        backup: yes
      notify: Restart prometheus

  handlers:
    - name: Restart prometheus
      systemd:
        name: prometheus
        state: restarted
        enabled: yes
