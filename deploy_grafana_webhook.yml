---
- name: Déployer un endpoint webhook Grafana vers iTop avec gestion firing/resolved
  hosts: itop
  become: yes
  vars:
    itop_webhook_path: "/var/www/html/web/grafana_webhook1.php"
    itop_api_url: "http://10.0.57.36/web/webservices/rest.php?version=1.3"
    itop_login: "rest_user"
    itop_password: "RestUser@123"
    itop_org_id: "4"
    itop_caller_id: "1"

  tasks:
    - name: S'assurer que le répertoire de destination existe
      file:
        path: "/var/www/html/web"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Déployer le script webhook PHP
      copy:
        dest: "{{ itop_webhook_path }}"
        owner: www-data
        group: www-data
        mode: '0644'
        content: |
          <?php
// Lire les données envoyées par Grafana
$json = file_get_contents('php://input');
$data = json_decode($json, true);

// Sauvegarder le JSON reçu pour debug
file_put_contents('/tmp/grafana_test_input.txt', $json);

// Variables d'authentification iTop
$api_url = "http://10.0.57.36/web/webservices/rest.php?version=1.3";
$auth_user = "rest_user";
$auth_pwd = "RestUser@123";
$org_id = "4";       // ID de l'organisation dans iTop
$caller_id = "1";    // ID de l'utilisateur demandeur

// Extraire les données de l'alerte Grafana
$alert_status = $data['status'] ?? '';
$alert_name = $data['alerts'][0]['labels']['alertname'] ?? 'Unknown Alert';
$description = $data['alerts'][0]['annotations']['description'] ?? 'Alerte sans description';

// Si une alerte est active (firing), créer un ticket dans iTop
if ($alert_status == 'firing') {
    $payload = [
        'operation' => 'core/create',
        'class' => 'UserRequest',
        'comment' => 'Création automatique depuis Grafana',
        'auth_user' => $auth_user,
        'auth_pwd' => $auth_pwd,
        'fields' => [
            'title' => "Alerte Grafana : $alert_name",
            'description' => $description,
            'org_id' => $org_id,
            'caller_id' => $caller_id,
            'impact' => '2',        // Medium
            'urgency' => '2',       // Medium
            'priority' => '2',      // Medium
        ]
    ];

    // Important : envoyer le payload comme json_data
    $post_data = http_build_query(['json_data' => json_encode($payload)]);

    // Préparer la requête POST avec json_data
    $options = [
        'http' => [
            'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
            'method'  => 'POST',
            'content' => $post_data,
        ]
    ];

    $context  = stream_context_create($options);
    $result = file_get_contents($api_url, false, $context);

    // Sauvegarder la réponse de l’API iTop pour debug
    file_put_contents('/tmp/grafana_itop_response.txt', $result);

    if ($result === FALSE) {
        http_response_code(500);
        echo json_encode(["status" => "error", "message" => "Erreur lors de l'appel à l'API iTop"]);
    } else {
        http_response_code(200);
        echo json_encode(["status" => "success", "itop_response" => json_decode($result, true)]);
    }
} else {
    http_response_code(202);
    echo json_encode(["status" => "ignored", "message" => "Alerte non firing (pas traitée)"]);
}
?>

