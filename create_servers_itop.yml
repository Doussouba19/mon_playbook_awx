---
- name: "Créer les serveurs dans iTop"
  hosts: all
  gather_facts: true
  tasks:

    - name: "Déduire les infos système"
      set_fact:
        server_name: "{{ ansible_hostname }}"
        model_name: "{{ ansible_product_name | default('unknown') }}"
        os_name: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
        org_name: "MyOrganization"

    - name: "Récupérer l'organisation"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/get
          class: Organization
          key: "SELECT Organization WHERE name='{{ org_name }}'"
      register: org_query

    - name: "Définir org_id"
      set_fact:
        org_id: "{{ org_query.json.objects | dict2items | first.value.key }}"

    - name: "Récupérer le modèle (Model)"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/get
          class: Model
          key: "SELECT Model WHERE name='{{ model_name }}'"
      register: model_query

    - name: "Définir model_id"
      set_fact:
        model_id: "{{ model_query.json.objects | dict2items | first.value.key }}"

    - name: "Créer la machine virtuelle (VirtualMachine)"
      uri:
        url: "{{ itop_url }}/webservices/rest.php?version=1.3"
        method: POST
        body_format: json
        headers:
          Authorization: "Basic {{ itop_auth }}"
        body:
          operation: core/create
          class: VirtualMachine
          comment: "Création automatique via Ansible"
          fields:
            name: "{{ server_name }}"
            org_id: "Organization::{{ org_id }}"
            model_id: "Model::{{ model_id }}"
            status: "production"
            osfamily_id: "Other"
            osversion_id: "Other"
      register: vm_create
