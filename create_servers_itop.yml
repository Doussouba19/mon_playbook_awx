---
- name: Collecter les infos de tous les serveurs distants
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Lire la marque du serveur
      command: dmidecode -s system-manufacturer
      register: manufacturer_output
      changed_when: false
      failed_when: false

    - name: Lire le modèle du serveur
      command: dmidecode -s system-product-name
      register: model_output
      changed_when: false
      failed_when: false

    - name: Enregistrer les infos localement
      set_fact:
        server_data: {
          "name": "{{ inventory_hostname }}",
          "org_id": "4",
          "status": "production",
          "business_criticity": "low",
          "location_id": "3",
          "rack_id": "15",
          "brand_name": "{{ manufacturer_output.stdout | default('Unknown') }}",
          "model_name": "{{ model_output.stdout | default('Unknown') }}",
          "osfamily_name": "Ubuntu",
          "osversion_name": "20.04 LTS",
          "cpu": "{{ ansible_processor[1] | default('Unknown') }}",
          "ram": "{{ ansible_memtotal_mb | default('0') }}",
          "nb_u": "2",
          "serialnumber": "SRV-{{ ansible_default_ipv4.address }}",
          "asset_number": "AST-{{ ansible_default_ipv4.address }}",
          "move2production": "{{ lookup('pipe', 'date +%Y-%m-%d') }}",
          "purchase_date": "{{ lookup('pipe', 'date +%Y-%m-%d') }}",
          "end_of_warranty": "{{ lookup('pipe', 'date -d "+3 years" +%Y-%m-%d') }}",
          "description": "Créé automatiquement (version centralisée)"
        }

    - name: Sauvegarder les données globales
      add_host:
        name: localhost
        groups: collected_data
        server_data: "{{ server_data }}"

- name: Envoi dans iTop depuis le contrôleur
  hosts: collected_data
  gather_facts: no

  vars:
    itop_url: "http://10.0.57.36/web/webservices/rest.php"
    itop_user: "rest_user"
    itop_password: "RestUser@123"

  tasks:
    - name: Créer le serveur dans iTop via API REST
      uri:
        url: "{{ itop_url }}"
        method: POST
        user: "{{ itop_user }}"
        password: "{{ itop_password }}"
        force_basic_auth: yes
        body_format: form-urlencoded
        body:
          json_data: >
            {{
              {
                "version": "1.3",
                "operation": "core/create",
                "class": "Server",
                "comment": "Ajout via playbook centralisé",
                "fields": server_data
              } | to_json
            }}
        status_code: 200
      delegate_to: localhost

    - name: Afficher la réponse
      debug:
        var: server_data
