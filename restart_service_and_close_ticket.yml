---
- name: Redémarrer un service et clôturer le ticket iTop
  hosts: all
  become: yes

  vars:
    service_name: mysql               # Exemple : mysql, nginx, etc.
    instance_ip: "10.0.57.34"         # IP du serveur de l'alerte
    alert_name: "MySQL DOWN"          # Doit correspondre exactement à l'alerte Grafana
    severity: "critical"              # critical / warning / info
    itop_url: "http://10.0.57.36/web/webservices/rest.php?version=1.3"
    itop_user: "rest_user"
    itop_password: "RestUser@123"

  tasks:

    - name: Redémarrer le service {{ service_name }}
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        state: restarted

    - name: Construire le titre du ticket (doit être identique à Grafana)
      set_fact:
        ticket_title: "Alerte Grafana : {{ alert_name }} ({{ instance_ip }})"

    - name: Chercher l’ID du ticket iTop correspondant
      uri:
        url: "{{ itop_url }}"
        method: POST
        body_format: form-urlencoded
        headers:
          Content-Type: application/x-www-form-urlencoded
        body:
          auth_user: "{{ itop_user }}"
          auth_pwd: "{{ itop_password }}"
          json_data: >
            {
              "operation": "core/get",
              "class": "UserRequest",
              "key": "title = \"{{ ticket_title }}\" AND status != 'closed'"
            }
      register: ticket_lookup

    - name: Extraire l’ID du ticket
      set_fact:
        ticket_id: "{{ (ticket_lookup.json.objects | dict2items)[0].value.fields.id }}"
      when: ticket_lookup.json.objects | length > 0

    - name: Clôturer le ticket dans iTop
      uri:
        url: "{{ itop_url }}"
        method: POST
        body_format: form-urlencoded
        headers:
          Content-Type: application/x-www-form-urlencoded
        body:
          auth_user: "{{ itop_user }}"
          auth_pwd: "{{ itop_password }}"
          json_data: >
            {
              "operation": "core/update",
              "class": "UserRequest",
              "key": {{ ticket_id }},
              "fields": {
                "status": "closed",
                "solution": "Service {{ service_name }} redémarré automatiquement par Ansible"
              }
            }
      when: ticket_lookup.json.objects | length > 0

    - name: Message si aucun ticket trouvé
      debug:
        msg: "Aucun ticket correspondant à {{ ticket_title }} trouvé à clôturer."
      when: ticket_lookup.json.objects | length == 0
